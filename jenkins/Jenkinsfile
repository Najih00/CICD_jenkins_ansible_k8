pipeline {
    agent any

    environment {
        DOCKER_HUB_REPO = 'dnajih/sendimage'  // Update with your Docker Hub repository
        NGINX_TAG = env.BUILD_NUMBER                       // NGINX tag is set to Jenkins build number
    }

    stages {
        stage('Clone Git Repository') {
            steps {
                // Clone the Git repository
                git branch: 'master', url: 'https://github.com/Najih00/CICD_jenkins_ansible_k8.git'
            }
        }

        stage('Retrieve Files') {
            steps {
                // Navigate to the ansible folder and retrieve playbook
                dir('ansible') {
                    sh 'cp playbook.yaml ../'
                }

                // Navigate to the jenkins folder and retrieve Jenkins file
                dir('jenkins') {
                    sh 'cp Jenkinsfile ../'
                }

                // Navigate to the kubemanifest folder and retrieve deployment.yaml
                dir('kubemanifest') {
                    sh 'cp deployment.yaml ../'
                }
            }
        }

        stage('Test Kubeconfig') {
            steps {
                withCredentials([file(credentialsId: 'config', variable: 'KUBECONFIG')]) {
                    sh 'cat $KUBECONFIG > kubeconfig.yaml'
                  //  sh 'cat kubeconfig.yaml' // Display kubeconfig content (optional)
                }
            }
        }

        stage('Deploy NGINX to AKS') {
            steps {
                // Replace placeholders in deployment.yaml with actual image details
                sh "sed -i 's|{{DOCKER_HUB_REPO}}|${DOCKER_HUB_REPO}|g' deployment.yaml"
                sh "sed -i 's|{{NGINX_TAG}}|${NGINX_TAG}|g' deployment.yaml"

                // Deploy NGINX image to AKS
                sh "kubectl apply -f deployment.yaml"
            }
        }

        stage('Deploy with Ansible') {
            steps {
                script {
                    // Run Ansible playbook
                    sh 'ansible-playbook playbook.yaml'
                }
            }
        }
    }
}
